{
    "openapi": "3.0.0",
    "info": {
        "title": "Profiles Management API",
        "description": "This API enables the management of user profile information, and allows to:\n *  Create, read, update, and delete profiles\n *  Authenticate admin user before performing certain actions",
        "contact": {
            "name": "Johan Herman Ngata",
            "email": "johaneherman1995@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/admin/profiles": {
            "get": {
                "tags": [
                    "Profiles"
                ],
                "summary": "Get list of profiles no matter what the status is.  ",
                "description": "Returns list profiles in condition to be authenticated and have an admin role.",
                "operationId": "getProfileListByadmin",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "500": {
                        "description": "internal servor error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Profiles"
                ],
                "summary": "Create a new profile",
                "description": "creates a new profile with required fields(lastname, firstname), an optional field(image), and a statuses_id that is 1 (active) by default.",
                "operationId": "createProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "lastname",
                                    "firstname"
                                ],
                                "properties": {
                                    "lastname": {
                                        "type": "string",
                                        "example": "john"
                                    },
                                    "firstname": {
                                        "type": "string",
                                        "example": "doe"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "profile successfully created"
                    },
                    "422": {
                        "description": "Unprocessable content"
                    },
                    "500": {
                        "description": "Internal servor error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/profiles/{id}": {
            "get": {
                "tags": [
                    "Profiles"
                ],
                "summary": "Get profile information",
                "description": "Returns specific profile datas",
                "operationId": "getProfileById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Profile id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Profiles"
                ],
                "summary": "Update an existing profile",
                "description": "Updates an existing profile with required fields (lastname, firstname), an optional field (image), and a required statuses_id that must be one of the following values: 1 (active), 2 (pending), or 3 (inactive).",
                "operationId": "updateProfile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the profile to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "lastname",
                                    "firstname",
                                    "statuses_id"
                                ],
                                "properties": {
                                    "lastname": {
                                        "type": "string",
                                        "example": "john"
                                    },
                                    "firstname": {
                                        "type": "string",
                                        "example": "doe"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "profile.jpg",
                                        "nullable": true
                                    },
                                    "statuses_id": {
                                        "description": "Required status, must be 1 (active), 2 (inactive), or 3 (pending)",
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile successfully updated"
                    },
                    "422": {
                        "description": "Unprocessable content"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Profiles"
                ],
                "summary": "Delete a profile",
                "description": "Deletes a profile by its ID.",
                "operationId": "deleteProfile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the profile to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile successfully deleted"
                    },
                    "404": {
                        "description": "Profile not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new admin user",
                "description": "This route allows registering a new admin user with a name, email, and password.",
                "operationId": "registerAdmin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "admin@example.com"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-01-16T12:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-01-16T12:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error while registering user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "null"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 501
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate a user",
                "description": " allows a user to authenticate and to receive a token.",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successfully connected",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                },
                                                "roles": {
                                                    "type": "string",
                                                    "example": "admin"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "authorization": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "bearer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email or password incorrect"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation faild",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout a user",
                "description": "allows to disconnect an authenticated user.",
                "operationId": "b1af028ac1c65496900016ad15f06da3",
                "responses": {
                    "200": {
                        "description": "Successfully Disconnected",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "200"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "401"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh the authentication token",
                "description": "This endpoint refreshes the JWT token for the authenticated user.",
                "operationId": "refreshToken",
                "responses": {
                    "200": {
                        "description": "Token successfully refreshed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "authorisation": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "new_jwt_token_here"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "bearer"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 3600
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "token successfully refreshed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid or expired token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/profiles": {
            "get": {
                "tags": [
                    "Profiles"
                ],
                "summary": "Get list of profiles where statuses_id = 1 (active)",
                "description": "Returns list of profiles",
                "operationId": "getProfileList",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "user@example.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "password1234"
                    },
                    "roles": {
                        "type": "string",
                        "example": "user"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-16T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-16T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "Profile": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "lastname": {
                        "type": "string",
                        "example": "Johane Doe"
                    },
                    "firstname": {
                        "type": "string",
                        "example": "johane Doe2"
                    },
                    "image": {
                        "type": "file",
                        "example": "johane.jpeg"
                    },
                    "statuses_id": {
                        "description": "Foreign key referencing the status in the statuses table (1: active, 2: pending, 3: inactive)",
                        "type": "integer",
                        "example": "2"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-16T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-16T12:00:00Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "tags": [
        {
            "name": "Profiles",
            "description": "Profiles"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        }
    ]
}